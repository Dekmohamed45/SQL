# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 


CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )
;


#Then I inserted the Spotify Data .csv into the table.
#Next, I explored the data using the following SQL. 

SELECT * FROM BIT_DB.Spotifydata;





#1 -- the average danceability by artist and track
SELECT artist_name, track_name, avg(danceability)
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name;


#2 --the top 10 artists based on popularity
SELECT artist_name, popularity, track_name
FROM BIT_DB.Spotifydata
ORDER BY popularity desc limit 10;



#3 --artist that released the least popular song?
SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity asc limit 1;



#4 -- the average danceability for the 10 most popular songs
SELECT artist_name, track_name, avg(danceability)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY popularity desc LIMIT 10;


#5 --which artist'song has the largest energy and danceability
SELECT artist_name, track_name, energy, danceability FROM BIT_DB.Spotifydata
GROUP by danceability
ORDER BY energy desc limit 1;


#6 --making an opinion based only on popularity stats using the CASE statement
SELECT Artist_name, track_name, popularity,

CASE 
    WHEN popularity >= 90 THEN 'This song was very popular'
    WHEN popularity < 90 THEN 'This song was okay'
    ELSE 'It was a failure'
END AS Popularity_Opinion
FROM BIT_DB.Spotifydata;
